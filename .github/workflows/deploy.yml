# Nama workflow yang akan muncul di tab Actions di GitHub
name: Deploy to Hostinger FTP

# Kapan workflow ini dijalankan
on:
  # Dijalankan setiap kali ada push ke branch 'main'
  push:
    branches: ["main"]
  # Bisa juga dijalankan manual dari tab Actions
  workflow_dispatch:

# Langkah-langkah yang akan dijalankan
jobs:
  # Nama job-nya
  build-and-deploy:
    runs-on: ubuntu-latest # Menjalankan job di mesin virtual Ubuntu
    
    steps:
      # 1. Mengambil kode dari repository
      - name: Checkout Code
        uses: actions/checkout@v4
      
      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Versi Node.js yang sama
          cache: 'npm'
      
      # 3. Install semua dependencies
      - name: Install Dependencies
        run: npm install
      
      # 4. Build project jadi file statis di folder 'out'
      - name: Build Project
        run: npm run build
      
      # 5. Backup deployment yang sudah ada sebelum upload versi baru
      - name: Backup existing deployment
        id: backup
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          sudo apt-get update
          sudo apt-get install -y lftp
          TIMESTAMP="$(date +%Y%m%d%H%M%S)"
          BACKUP_DIR="backup-${TIMESTAMP}"
          mkdir -p "$BACKUP_DIR"
          lftp -u "$FTP_USERNAME","$FTP_PASSWORD" "$FTP_SERVER" <<EOF
          set ftp:list-options -a
          set ssl:verify-certificate no
          mirror --verbose --parallel=2 --use-cache --continue public_html/rajafreezdriedfood.com $BACKUP_DIR
          quit
          EOF
          tar -czf "${BACKUP_DIR}.tar.gz" "$BACKUP_DIR"
          echo "archive=${BACKUP_DIR}.tar.gz" >> "$GITHUB_OUTPUT"
      
      - name: Upload deployment backup
        if: steps.backup.outputs.archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.backup.outputs.archive }}
          path: ${{ steps.backup.outputs.archive }}
      
      # 6. Deploy incremental ke Hostinger via FTP
      - name: Deploy to Hostinger
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./out/
          server-dir: public_html/rajafreezdriedfood.com/
          exclude: |
            **/.git*
            **/.github/**
            **/node_modules/**
          state-name: ftp-deploy-sync.json
